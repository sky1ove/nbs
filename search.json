[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "nbs",
    "section": "",
    "text": "This file will become your README and also the index of your documentation."
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "nbs",
    "section": "Install",
    "text": "Install\npip install nbs"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "nbs",
    "section": "How to use",
    "text": "How to use\nFill me in please! Don’t forget code examples:\n\n1+1\n\n2"
  },
  {
    "objectID": "notebooks/bubble_plot.html",
    "href": "notebooks/bubble_plot.html",
    "title": "Bubble plot",
    "section": "",
    "text": "library(ggplot2)\n\n\n# Read data\ndata = read.csv('../data/bubble.csv')\n\n\nhead(data); dim(data)\n\n\nA data.frame: 6 × 5\n\n\n\nprotein\ncluster\ncolor\nsize\nGroup\n\n\n\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n\n\n\n\n1\nBTN3A1\na\n142.2518\n14.22518\nBTN\n\n\n2\nBTN3A3\na\n130.2366\n13.02366\nBTN\n\n\n3\nHLA-DRA\na\n116.2147\n11.62147\nHLA\n\n\n4\nHLA-DMA\na\n109.3468\n10.93468\nHLA\n\n\n5\nHLA-DOA\na\n109.0862\n10.90862\nHLA\n\n\n6\nHLA-DPA1\na\n108.6778\n10.86778\nHLA\n\n\n\n\n\n\n1165\n\n\nData needs to be unstacked: x & y label columns (in this case, protein & cluster), and color and size as two value columns.\n\n# Plot\nfigsize = c(3,8)\n\noptions(repr.plot.width=figsize[1], repr.plot.height=figsize[2])\nggplot(data,aes(cluster,protein)) +\n       geom_point(aes(size=size,color=color),shape=16)+\n       facet_grid(Group ~., scales=\"free\", space=\"free\")+\n       scale_colour_distiller(palette=\"RdYlBu\")+\n       labs(x=\"\",y=\"\") +\n       # theme_pubr() + #theme_void() if vertical legend\n       theme(strip.text.y = element_blank(),\n             axis.line.x=element_blank(),\n             axis.line.y=element_blank(),\n             panel.background=element_rect(colour=\"black\", fill=\"white\"),\n             panel.grid.major = element_blank(),  # remove major grid\n             panel.grid.minor = element_blank(),  # remove minor grid\n             axis.text.y=element_text(size=10),\n             axis.text.x=element_text(angle=60,size=10,hjust=1))\n\n\n\n\n\n# Save\nggsave(\"Dotplot.pdf\", width = figsize[1], height = figsize[2], useDingbats=F)"
  },
  {
    "objectID": "notebooks/kinase_substrate_dataset.html",
    "href": "notebooks/kinase_substrate_dataset.html",
    "title": "Calculate substrate specificity from kinase-substrate dataset",
    "section": "",
    "text": "!pip install git+https://github.com/sky1ove/katlas.git\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom katlas.core import *\nfrom scipy.stats import spearmanr, pearsonr\n\n\nsns.set(rc={\"figure.dpi\":200, 'savefig.dpi':200})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\n\ndef get_heatmap(df, # Stacked Dataframe with kinase as index, substrates as columns\n                kinase # A specific kinase name in index\n               ):\n    aa_order = [i for i in 'PGACSTVILMFYWHKRQNDEty']\n    # position_order = [str(i) for i in range(-5,5)]\n    # position_order.remove('0')\n    \n    kk = get_one_kinase(df, kinase).T\n    # kkk = kk.reindex(index=aa_order, columns=position_order)\n    kkk = kk.reindex(index=aa_order)\n    \n    plt.figure(figsize=(6, 10))\n    sns.heatmap(kkk, cmap='binary', annot=False)\n    plt.title(f'{kinase} from PSPA data')\n    plt.show()\n\n\ndef plot_corr(\n              x,\n              y,\n              xlabel=None,# x axis label\n              ylabel=None,# y axis label\n              order=1, # polynomial level, if straight, order=1\n              method = 'pearson', # can be spearman\n             ):\n    \"Given a dataframe and the name of two columns, plot the two columns' correlation\"\n    \n    if method == 'spearman':\n        correlation, pvalue = spearmanr(x, y)\n    elif method == 'pearson':\n        correlation, pvalue = pearsonr(x, y)\n    else:\n        raise ValueError(\"Invalid correlation method. Choose 'spearman' or 'pearson'.\")\n        \n    sns.regplot(\n                x=x,\n                y=y,\n                order=order,\n                line_kws={'color': 'gray'}\n           )\n    \n    if xlabel is not None:\n        plt.xlabel(xlabel)\n        \n    if ylabel is not None:\n        plt.ylabel(ylabel)\n    \n    correlation_text = f'Spearman: {correlation:.2f}' if method == 'spearman' else f'Pearson: {correlation:.2f}'\n\n    plt.text(x=0.8, y=0.1, s=correlation_text, transform=plt.gca().transAxes, ha='center', va='center')\n    \n    plt.show()"
  },
  {
    "objectID": "notebooks/kinase_substrate_dataset.html#setup",
    "href": "notebooks/kinase_substrate_dataset.html#setup",
    "title": "Calculate substrate specificity from kinase-substrate dataset",
    "section": "",
    "text": "!pip install git+https://github.com/sky1ove/katlas.git\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom katlas.core import *\nfrom scipy.stats import spearmanr, pearsonr\n\n\nsns.set(rc={\"figure.dpi\":200, 'savefig.dpi':200})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\n\ndef get_heatmap(df, # Stacked Dataframe with kinase as index, substrates as columns\n                kinase # A specific kinase name in index\n               ):\n    aa_order = [i for i in 'PGACSTVILMFYWHKRQNDEty']\n    # position_order = [str(i) for i in range(-5,5)]\n    # position_order.remove('0')\n    \n    kk = get_one_kinase(df, kinase).T\n    # kkk = kk.reindex(index=aa_order, columns=position_order)\n    kkk = kk.reindex(index=aa_order)\n    \n    plt.figure(figsize=(6, 10))\n    sns.heatmap(kkk, cmap='binary', annot=False)\n    plt.title(f'{kinase} from PSPA data')\n    plt.show()\n\n\ndef plot_corr(\n              x,\n              y,\n              xlabel=None,# x axis label\n              ylabel=None,# y axis label\n              order=1, # polynomial level, if straight, order=1\n              method = 'pearson', # can be spearman\n             ):\n    \"Given a dataframe and the name of two columns, plot the two columns' correlation\"\n    \n    if method == 'spearman':\n        correlation, pvalue = spearmanr(x, y)\n    elif method == 'pearson':\n        correlation, pvalue = pearsonr(x, y)\n    else:\n        raise ValueError(\"Invalid correlation method. Choose 'spearman' or 'pearson'.\")\n        \n    sns.regplot(\n                x=x,\n                y=y,\n                order=order,\n                line_kws={'color': 'gray'}\n           )\n    \n    if xlabel is not None:\n        plt.xlabel(xlabel)\n        \n    if ylabel is not None:\n        plt.ylabel(ylabel)\n    \n    correlation_text = f'Spearman: {correlation:.2f}' if method == 'spearman' else f'Pearson: {correlation:.2f}'\n\n    plt.text(x=0.8, y=0.1, s=correlation_text, transform=plt.gca().transAxes, ha='center', va='center')\n    \n    plt.show()"
  },
  {
    "objectID": "notebooks/kinase_substrate_dataset.html#load-data",
    "href": "notebooks/kinase_substrate_dataset.html#load-data",
    "title": "Calculate substrate specificity from kinase-substrate dataset",
    "section": "Load data",
    "text": "Load data\n\n# kinase-substrate data\ndf= pd.read_csv('kinase_substrates.csv')\n\n\ndf\n\n\n\n\n\n\n\n\nKINASE\nSITE_+/-7_AA\n\n\n\n\n0\nDYRK2\nLGSsRPSsAPGMLPL\n\n\n1\nPAK2\nRtPGRPLsSYGMDSR\n\n\n2\nPAK2\nGVRRRRLsNVsLTGL\n\n\n3\nPAK2\nIRCLRRDsHKVDNYL\n\n\n4\nPAK2\nLHCLRRDsHKIDNYL\n\n\n...\n...\n...\n\n\n23000\nULK2\nQRVLDtssLtQsAPA\n\n\n23001\nULK2\nDtssLtQsAPAsPtN\n\n\n23002\nULK2\nLAQPINFsVSLSNSH\n\n\n23003\nULK2\nESsPILTsFELVKVP\n\n\n23004\nULK2\nTHRRMVVsMPNLQDI\n\n\n\n\n23005 rows × 2 columns\n\n\n\nSplit phosphosite sequence to single amino acid\n\n# Split the 'SITE_+/-7_AA' column into individual letters\nsplit_cols = df['SITE_+/-7_AA'].apply(list).apply(pd.Series)\n\n# Rename the new columns from -7 to 7\nsplit_cols.columns = range(-7, 8)\n\n# Concatenate the original dataframe with the split columns\ndf2 = pd.concat([df, split_cols], axis=1)\n\n\ndf2\n\n\n\n\n\n\n\n\nKINASE\nSITE_+/-7_AA\n-7\n-6\n-5\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\n5\n6\n7\n\n\n\n\n0\nDYRK2\nLGSsRPSsAPGMLPL\nL\nG\nS\ns\nR\nP\nS\ns\nA\nP\nG\nM\nL\nP\nL\n\n\n1\nPAK2\nRtPGRPLsSYGMDSR\nR\nt\nP\nG\nR\nP\nL\ns\nS\nY\nG\nM\nD\nS\nR\n\n\n2\nPAK2\nGVRRRRLsNVsLTGL\nG\nV\nR\nR\nR\nR\nL\ns\nN\nV\ns\nL\nT\nG\nL\n\n\n3\nPAK2\nIRCLRRDsHKVDNYL\nI\nR\nC\nL\nR\nR\nD\ns\nH\nK\nV\nD\nN\nY\nL\n\n\n4\nPAK2\nLHCLRRDsHKIDNYL\nL\nH\nC\nL\nR\nR\nD\ns\nH\nK\nI\nD\nN\nY\nL\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n23000\nULK2\nQRVLDtssLtQsAPA\nQ\nR\nV\nL\nD\nt\ns\ns\nL\nt\nQ\ns\nA\nP\nA\n\n\n23001\nULK2\nDtssLtQsAPAsPtN\nD\nt\ns\ns\nL\nt\nQ\ns\nA\nP\nA\ns\nP\nt\nN\n\n\n23002\nULK2\nLAQPINFsVSLSNSH\nL\nA\nQ\nP\nI\nN\nF\ns\nV\nS\nL\nS\nN\nS\nH\n\n\n23003\nULK2\nESsPILTsFELVKVP\nE\nS\ns\nP\nI\nL\nT\ns\nF\nE\nL\nV\nK\nV\nP\n\n\n23004\nULK2\nTHRRMVVsMPNLQDI\nT\nH\nR\nR\nM\nV\nV\ns\nM\nP\nN\nL\nQ\nD\nI\n\n\n\n\n23005 rows × 17 columns\n\n\n\nRemove kinase that appears less than 50 times\n\ncnt = df2.groupby('KINASE').size().reset_index(name = 'cnt')\n\n\ncnt.hist(bins=100);\n\n\n\n\n\ncnt_50 = cnt[(cnt.cnt&gt;=50)]\n\n\ncnt_50.sort_values('cnt')\n\n\n\n\n\n\n\n\nKINASE\ncnt\n\n\n\n\n57\nCDC7\n51\n\n\n44\nCAMK1A\n51\n\n\n119\nDYRK2\n52\n\n\n379\nROCK2\n53\n\n\n264\nMST1\n54\n\n\n...\n...\n...\n\n\n58\nCDK1\n869\n\n\n127\nERK2\n894\n\n\n88\nCK2A1\n960\n\n\n336\nPKCA\n1094\n\n\n333\nPKACA\n1707\n\n\n\n\n84 rows × 2 columns\n\n\n\n\ndf3 = df2[df2.KINASE.isin(cnt_50.KINASE)].reset_index()\n\n\naa = Data.get_aa_info()\n\n\naa.index\n\nIndex(['A', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q',\n       'R', 'S', 'T', 'V', 'W', 'Y', 's', 't', 'y', 'Kac', 'Kme3'],\n      dtype='object', name='aa')\n\n\n\n#In kinase-substrate datast, there are additional ['_', 'c', 'n', 'k', 'r', 's']\n\n# amino acid order in Lew's paper\naa_order_paper = [i for i in 'PGACSTVILMFYWHKRQNDEty']\n# full amino acid appeared in dataset\naa_order = [i for i in 'PGACSTVILMFYWHKRQNDEytsrkcn_']\n\n# position order in Lew's paper\nposition_paper = [-5,-4,-3,-2,-1,1,2,3,4]\n# full position in the dataset\nposition = [i for i in range(-7,8)]\n\n\n# raw data from Lew's paper\nraw = Data.get_stack_raw().set_index('kinase')"
  },
  {
    "objectID": "notebooks/kinase_substrate_dataset.html#get-heatmap-of-specific-kinase",
    "href": "notebooks/kinase_substrate_dataset.html#get-heatmap-of-specific-kinase",
    "title": "Calculate substrate specificity from kinase-substrate dataset",
    "section": "Get heatmap of specific kinase",
    "text": "Get heatmap of specific kinase\n\ndef get_freq(df3, k):\n    df_k = df3.query(f'KINASE==\"{k}\"').reset_index()\n    \n    #Count frequency for each amino acid at each position\n    melted_k = df_k.melt(id_vars=['KINASE', 'SITE_+/-7_AA'], \n                    value_vars=[i for i in range(-7, 8)],\n                    var_name='Position', \n                    value_name='aa')\n    \n    # Group by Position and Amino Acid and count occurrences\n    grouped = melted_k.groupby(['Position', 'aa']).size().reset_index(name='Count')\n    \n    # get pivot table\n    pivot_k = grouped.pivot(index='aa', columns='Position', values='Count').fillna(0)\n    \n    # Get frequency by dividing the sum of each column\n    freq_k = pivot_k/pivot_k.sum()\n\n    \n    # data from the kinase-substrate dataset, and format is Lew's paper's format\n    p_k_paper = freq_k.reindex(index=aa_order_paper)[position_paper]\n\n    # full pivot data from kinase-substrate dataset\n    p_k = freq_k.reindex(index=aa_order)[position]\n\n    \n    return p_k_paper, p_k\n\n\ndef plot_raw_ks(k):\n    \n    p_k_paper, p_k = get_freq(df3,k)\n    raw_unavailable = []\n    \n    k=k.upper() # kinase in raw PSPA data is in upper case\n    \n    # PSPA data from Lew's paper\n    try:     \n        p_raw = get_one_kinase(raw,k).T\n        p_raw = p_raw.reindex(index=aa_order_paper)\n        x = p_raw.unstack().values\n        y = p_k_paper.unstack().values\n        \n        # draw raw vs. kinase-substrate correlation\n        plt.title(f'{k}')\n        plot_corr(x,y, xlabel='PSPA',ylabel='kinase-substrate dataset')\n        \n        # draw raw PSPA data\n        plt.figure(figsize=(6, 10))\n        sns.heatmap(p_raw, cmap='binary', annot=False)\n        plt.title(f'{k} from PSPA data')\n        plt.show()\n        \n    except:\n        print(f'{k} is not available in PSPA data')\n        raw_unavailable.append(k)\n\n    # draw kinase-substrate heatmap using paper's format\n    plt.figure(figsize=(6, 10))\n    sns.heatmap(p_k_paper, cmap='binary', annot=False)\n    plt.title(f'{k} from kinase substrate dataset')\n    plt.show()\n\n    # draw full heatmap\n    plt.figure(figsize=(9, 11))\n    sns.heatmap(p_k, cmap='binary', annot=False)\n    plt.title(f'{k} from kinase substrate dataset (full)')\n    plt.show()\n    \n    return raw_unavailable"
  },
  {
    "objectID": "notebooks/kinase_substrate_dataset.html#plot",
    "href": "notebooks/kinase_substrate_dataset.html#plot",
    "title": "Calculate substrate specificity from kinase-substrate dataset",
    "section": "Plot",
    "text": "Plot\n\ncnt_50.sort_values('cnt',ascending=False)\n\n\n\n\n\n\n\n\nKINASE\ncnt\n\n\n\n\n333\nPKACA\n1707\n\n\n336\nPKCA\n1094\n\n\n88\nCK2A1\n960\n\n\n127\nERK2\n894\n\n\n58\nCDK1\n869\n\n\n...\n...\n...\n\n\n264\nMST1\n54\n\n\n379\nROCK2\n53\n\n\n119\nDYRK2\n52\n\n\n44\nCAMK1A\n51\n\n\n57\nCDC7\n51\n\n\n\n\n84 rows × 2 columns\n\n\n\n\nfor i, r in cnt_50.sort_values('cnt',ascending=False).iterrows():\n    k = r.KINASE\n    print(f'--------------------{k}, number of substrates: {r.cnt}--------------------')\n    \n    plot_raw_ks(k)\n\n--------------------PKACA, number of substrates: 1707--------------------\n--------------------PKCA, number of substrates: 1094--------------------\n--------------------CK2A1, number of substrates: 960--------------------\n--------------------ERK2, number of substrates: 894--------------------\n--------------------CDK1, number of substrates: 869--------------------\n--------------------Src, number of substrates: 801--------------------\nSRC is not available in PSPA data\n--------------------ERK1, number of substrates: 673--------------------\n--------------------GSK3B, number of substrates: 599--------------------\n--------------------Akt1, number of substrates: 563--------------------\n--------------------CDK2, number of substrates: 511--------------------\n--------------------CAMK2A, number of substrates: 499--------------------\n--------------------CDK5, number of substrates: 411--------------------\n--------------------P38A, number of substrates: 385--------------------\n--------------------PLK1, number of substrates: 368--------------------\n--------------------ATM, number of substrates: 336--------------------\n--------------------AMPKA1, number of substrates: 330--------------------\n--------------------JNK1, number of substrates: 295--------------------\n--------------------Abl, number of substrates: 293--------------------\nABL is not available in PSPA data\n--------------------mTOR, number of substrates: 264--------------------\n--------------------Fyn, number of substrates: 254--------------------\nFYN is not available in PSPA data\n--------------------AurB, number of substrates: 247--------------------\n--------------------PKCD, number of substrates: 216--------------------\n--------------------Chk1, number of substrates: 215--------------------\n--------------------CK1A, number of substrates: 202--------------------\n--------------------CK1D, number of substrates: 168--------------------\n--------------------PKG1, number of substrates: 159--------------------\n--------------------LYN, number of substrates: 157--------------------\nLYN is not available in PSPA data\n--------------------GSK3A, number of substrates: 153--------------------\n--------------------AurA, number of substrates: 152--------------------\n--------------------Lck, number of substrates: 151--------------------\nLCK is not available in PSPA data\n--------------------DNAPK, number of substrates: 151--------------------\n--------------------PKCZ, number of substrates: 149--------------------\n--------------------PKCE, number of substrates: 149--------------------\n--------------------EGFR, number of substrates: 144--------------------\nEGFR is not available in PSPA data\n--------------------PKCB, number of substrates: 139--------------------\n--------------------p90RSK, number of substrates: 138--------------------\n--------------------GRK2, number of substrates: 137--------------------\n--------------------PAK1, number of substrates: 134--------------------\n--------------------IKKB, number of substrates: 129--------------------\n--------------------MAPKAPK2, number of substrates: 129--------------------\n--------------------ATR, number of substrates: 128--------------------\n--------------------TBK1, number of substrates: 125--------------------\n--------------------PRKD1, number of substrates: 122--------------------\n--------------------ROCK1, number of substrates: 112--------------------\n--------------------LRRK2, number of substrates: 104--------------------\n--------------------Akt2, number of substrates: 104--------------------\n--------------------JNK2, number of substrates: 104--------------------\n--------------------CDK4, number of substrates: 100--------------------\n--------------------Syk, number of substrates: 99--------------------\nSYK is not available in PSPA data\n--------------------ULK1, number of substrates: 98--------------------\n--------------------p70S6K, number of substrates: 98--------------------\n--------------------Src iso1, number of substrates: 96--------------------\nSRC ISO1 is not available in PSPA data\n--------------------SGK1, number of substrates: 92--------------------\n--------------------JAK2, number of substrates: 89--------------------\nJAK2 is not available in PSPA data\n--------------------AMPKA2, number of substrates: 88--------------------\n--------------------RSK2, number of substrates: 87--------------------\n--------------------Pim1, number of substrates: 85--------------------\n--------------------PKCB iso2, number of substrates: 84--------------------\nPKCB ISO2 is not available in PSPA data\n--------------------INSR, number of substrates: 84--------------------\nINSR is not available in PSPA data\n--------------------Chk2, number of substrates: 82--------------------\n--------------------DYRK1A, number of substrates: 78--------------------\n--------------------PKCT, number of substrates: 74--------------------\n--------------------CK1E, number of substrates: 72--------------------\n--------------------HIPK2, number of substrates: 71--------------------\n--------------------CAMK2B, number of substrates: 69--------------------\n--------------------TTK, number of substrates: 68--------------------\n--------------------PAK2, number of substrates: 67--------------------\n--------------------IKKA, number of substrates: 67--------------------\n--------------------ChaK1, number of substrates: 66--------------------\n--------------------PDK1, number of substrates: 66--------------------\n--------------------PKCG, number of substrates: 65--------------------\n--------------------MEK1, number of substrates: 62--------------------\n--------------------CDK6, number of substrates: 61--------------------\n--------------------LKB1, number of substrates: 61--------------------\n--------------------CDK7, number of substrates: 61--------------------\n--------------------PKCI, number of substrates: 60--------------------\n--------------------P38G, number of substrates: 57--------------------\n--------------------CDK9, number of substrates: 57--------------------\n--------------------IKKE, number of substrates: 56--------------------\n--------------------MST1, number of substrates: 54--------------------\n--------------------ROCK2, number of substrates: 53--------------------\nROCK2 is not available in PSPA data\n--------------------DYRK2, number of substrates: 52--------------------\n--------------------CAMK1A, number of substrates: 51--------------------\n--------------------CDC7, number of substrates: 51--------------------"
  },
  {
    "objectID": "notebooks/alphamissense_to_pdb.html",
    "href": "notebooks/alphamissense_to_pdb.html",
    "title": "Load AlphaMissense score",
    "section": "",
    "text": "!pip install biopandas datatable py3Dmol\n\nRequirement already satisfied: biopandas in /usr/local/lib/python3.9/dist-packages (0.4.1)\nRequirement already satisfied: datatable in /usr/local/lib/python3.9/dist-packages (1.0.0)\nCollecting py3Dmol\n  Downloading py3Dmol-2.0.4-py2.py3-none-any.whl (12 kB)\nRequirement already satisfied: numpy&gt;=1.16.2 in /usr/local/lib/python3.9/dist-packages (from biopandas) (1.23.1)\nRequirement already satisfied: pandas&gt;=0.24.2 in /usr/local/lib/python3.9/dist-packages (from biopandas) (1.4.3)\nRequirement already satisfied: setuptools in /usr/local/lib/python3.9/dist-packages (from biopandas) (63.1.0)\nRequirement already satisfied: pytz&gt;=2020.1 in /usr/local/lib/python3.9/dist-packages (from pandas&gt;=0.24.2-&gt;biopandas) (2022.1)\nRequirement already satisfied: python-dateutil&gt;=2.8.1 in /usr/local/lib/python3.9/dist-packages (from pandas&gt;=0.24.2-&gt;biopandas) (2.8.2)\nRequirement already satisfied: six&gt;=1.5 in /usr/lib/python3/dist-packages (from python-dateutil&gt;=2.8.1-&gt;pandas&gt;=0.24.2-&gt;biopandas) (1.14.0)\nInstalling collected packages: py3Dmol\nSuccessfully installed py3Dmol-2.0.4\nWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n\n\n\nimport pandas as pd\nimport datatable as dt\nfrom datatable import f\nfrom biopandas.pdb import PandasPdb\nimport subprocess\nimport py3Dmol\n\n\ndef query_uniprot(df, #datatable\n                  uniprot_id):\n    braf = df.query(f'uniprot_id == \"{uniprot_id}\"').reset_index(drop=True) # if input is df\n    # braf = DT[f.uniprot_id == uniprot_id, :].to_pandas() # if input is datatable\n    braf[['aa1', 'position', 'aa2']] = braf['protein_variant'].str.extract(r'(\\D)(\\d+)(\\D)')\n    braf['position_aa'] = braf['aa1'] + braf['position']\n    braf_p = braf.pivot(columns='position_aa',index='aa2',values='am_pathogenicity')\n    columns = sorted(braf_p.columns, key=lambda x: int(x[1:]) if x[1:].isdigit() else -1)\n    braf_p = braf_p[columns]\n    return braf, braf_p\n\n\ndef read_pdb(fn):\n    pdb = PandasPdb()\n    df=pdb.read_pdb(fn).df['ATOM'].drop(columns=['line_idx'])\n    return df\n\n\ndef df2string(df, fn=None):\n    pdb_string = ''\n\n    for index, row in df.iterrows():\n        pdb_line = f\"{row['record_name']:&lt;6}{row['atom_number']:&gt;5} {row['atom_name']:^4} {row['residue_name']:&lt;3} {row['chain_id']:&lt;1}{row['residue_number']:&gt;4}    {row['x_coord']:&gt;8.3f}{row['y_coord']:&gt;8.3f}{row['z_coord']:&gt;8.3f}{row['occupancy']:&gt;6.2f}{row['b_factor']:&gt;6.2f}          {row['element_symbol']:&lt;2}\\n\"\n        pdb_string += pdb_line\n        \n    if fn is not None:\n        with open(fn,'w') as f:\n            f.write(pdb_string)\n\n    return pdb_string\n\n\ndef plot_protein(pdb_string):\n    \n    # with open(\"/content/AF-P15056-F1-model_v4.pdb\") as ifile:\n    #     protein = \"\".join([x for x in ifile])\n    \n    view = py3Dmol.view(width=800, height=600)\n    view.addModelsAsFrames(pdb_string)\n\n    # Use the color scheme based on b_factor for the cartoon representation\n    style = {'cartoon': {'color': 'spectrum'}}\n\n    view.setStyle({'model': -1}, style)\n\n    view.zoom(0.12)\n    view.show()"
  },
  {
    "objectID": "notebooks/alphamissense_to_pdb.html#setup",
    "href": "notebooks/alphamissense_to_pdb.html#setup",
    "title": "Load AlphaMissense score",
    "section": "",
    "text": "!pip install biopandas datatable py3Dmol\n\nRequirement already satisfied: biopandas in /usr/local/lib/python3.9/dist-packages (0.4.1)\nRequirement already satisfied: datatable in /usr/local/lib/python3.9/dist-packages (1.0.0)\nCollecting py3Dmol\n  Downloading py3Dmol-2.0.4-py2.py3-none-any.whl (12 kB)\nRequirement already satisfied: numpy&gt;=1.16.2 in /usr/local/lib/python3.9/dist-packages (from biopandas) (1.23.1)\nRequirement already satisfied: pandas&gt;=0.24.2 in /usr/local/lib/python3.9/dist-packages (from biopandas) (1.4.3)\nRequirement already satisfied: setuptools in /usr/local/lib/python3.9/dist-packages (from biopandas) (63.1.0)\nRequirement already satisfied: pytz&gt;=2020.1 in /usr/local/lib/python3.9/dist-packages (from pandas&gt;=0.24.2-&gt;biopandas) (2022.1)\nRequirement already satisfied: python-dateutil&gt;=2.8.1 in /usr/local/lib/python3.9/dist-packages (from pandas&gt;=0.24.2-&gt;biopandas) (2.8.2)\nRequirement already satisfied: six&gt;=1.5 in /usr/lib/python3/dist-packages (from python-dateutil&gt;=2.8.1-&gt;pandas&gt;=0.24.2-&gt;biopandas) (1.14.0)\nInstalling collected packages: py3Dmol\nSuccessfully installed py3Dmol-2.0.4\nWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n\n\n\nimport pandas as pd\nimport datatable as dt\nfrom datatable import f\nfrom biopandas.pdb import PandasPdb\nimport subprocess\nimport py3Dmol\n\n\ndef query_uniprot(df, #datatable\n                  uniprot_id):\n    braf = df.query(f'uniprot_id == \"{uniprot_id}\"').reset_index(drop=True) # if input is df\n    # braf = DT[f.uniprot_id == uniprot_id, :].to_pandas() # if input is datatable\n    braf[['aa1', 'position', 'aa2']] = braf['protein_variant'].str.extract(r'(\\D)(\\d+)(\\D)')\n    braf['position_aa'] = braf['aa1'] + braf['position']\n    braf_p = braf.pivot(columns='position_aa',index='aa2',values='am_pathogenicity')\n    columns = sorted(braf_p.columns, key=lambda x: int(x[1:]) if x[1:].isdigit() else -1)\n    braf_p = braf_p[columns]\n    return braf, braf_p\n\n\ndef read_pdb(fn):\n    pdb = PandasPdb()\n    df=pdb.read_pdb(fn).df['ATOM'].drop(columns=['line_idx'])\n    return df\n\n\ndef df2string(df, fn=None):\n    pdb_string = ''\n\n    for index, row in df.iterrows():\n        pdb_line = f\"{row['record_name']:&lt;6}{row['atom_number']:&gt;5} {row['atom_name']:^4} {row['residue_name']:&lt;3} {row['chain_id']:&lt;1}{row['residue_number']:&gt;4}    {row['x_coord']:&gt;8.3f}{row['y_coord']:&gt;8.3f}{row['z_coord']:&gt;8.3f}{row['occupancy']:&gt;6.2f}{row['b_factor']:&gt;6.2f}          {row['element_symbol']:&lt;2}\\n\"\n        pdb_string += pdb_line\n        \n    if fn is not None:\n        with open(fn,'w') as f:\n            f.write(pdb_string)\n\n    return pdb_string\n\n\ndef plot_protein(pdb_string):\n    \n    # with open(\"/content/AF-P15056-F1-model_v4.pdb\") as ifile:\n    #     protein = \"\".join([x for x in ifile])\n    \n    view = py3Dmol.view(width=800, height=600)\n    view.addModelsAsFrames(pdb_string)\n\n    # Use the color scheme based on b_factor for the cartoon representation\n    style = {'cartoon': {'color': 'spectrum'}}\n\n    view.setStyle({'model': -1}, style)\n\n    view.zoom(0.12)\n    view.show()"
  },
  {
    "objectID": "notebooks/alphamissense_to_pdb.html#load-am-data",
    "href": "notebooks/alphamissense_to_pdb.html#load-am-data",
    "title": "Load AlphaMissense score",
    "section": "Load AM Data",
    "text": "Load AM Data\nDownload the AlphaMissense aa substitution data\n\n# !wget https://storage.googleapis.com/dm_alphamissense/AlphaMissense_aa_substitutions.tsv.gz\n\n# df = pd.read_csv('AlphaMissense_aa_substitutions.tsv.gz', compression='gzip',  header=3, sep='\\t', quotechar='\"')\n\n# df.to_parquet('AlphaMissense_aa_substitutions.gzip.parquet', compression='gzip')\n\n\ndf = pd.read_parquet('AlphaMissense_aa_substitutions.gzip.parquet')\n\nCPU times: user 1min 16s, sys: 17.2 s, total: 1min 34s\nWall time: 1min 9s\n\n\n\n# Datatable can read much faster, but it is 7x size bigger than the parquet file (i.e. 7.9G vs. 1.3G)\n# dt.Frame(df).to_jay(\"AlphaMissense_aa_substitutions.jay\")\n\n# DT = dt.fread(\"AlphaMissense_aa_substitutions.jay\")\n\nOnly human protein uniprot id is available\n\nuniprot_id = \"P15056\"\n\n\nbraf, braf_p = query_uniprot(df, uniprot_id)\n\n\nbraf.head()\n\n\n\n\n\n\n\n\nuniprot_id\nprotein_variant\nam_pathogenicity\nam_class\naa1\nposition\naa2\nposition_aa\n\n\n\n\n0\nP15056\nM1A\n0.4161\nambiguous\nM\n1\nA\nM1\n\n\n1\nP15056\nM1C\n0.4648\nambiguous\nM\n1\nC\nM1\n\n\n2\nP15056\nM1D\n0.9470\npathogenic\nM\n1\nD\nM1\n\n\n3\nP15056\nM1E\n0.8794\npathogenic\nM\n1\nE\nM1\n\n\n4\nP15056\nM1F\n0.3059\nbenign\nM\n1\nF\nM1\n\n\n\n\n\n\n\n\nbraf.groupby('position').am_pathogenicity.mean().plot.line(figsize=(20,5));\n\n\n\n\n\n# This is a pivot table\nbraf_p.head()\n\n\n\n\n\n\n\nposition_aa\nM1\nA2\nA3\nL4\nS5\nG6\nG7\nG8\nG9\nG10\n...\nA757\nG758\nG759\nY760\nG761\nA762\nF763\nP764\nV765\nH766\n\n\naa2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA\n0.4161\nNaN\nNaN\n0.1381\n0.0814\n0.0866\n0.0876\n0.0862\n0.0769\n0.0744\n...\nNaN\n0.1272\n0.1170\n0.2643\n0.1275\nNaN\n0.2161\n0.0587\n0.0781\n0.0958\n\n\nC\n0.4648\n0.8514\n0.7150\n0.4444\n0.1360\n0.1588\n0.1583\n0.1368\n0.1265\n0.1279\n...\n0.3173\n0.2438\n0.1658\n0.1165\n0.2445\n0.2095\n0.2275\n0.2233\n0.2322\n0.1263\n\n\nD\n0.9470\n0.8642\n0.8135\n0.6475\n0.4370\n0.3221\n0.2415\n0.2339\n0.1992\n0.1899\n...\n0.5152\n0.5681\n0.4761\n0.3122\n0.4080\n0.1154\n0.4131\n0.1852\n0.1357\n0.1096\n\n\nE\n0.8794\n0.7726\n0.7313\n0.4440\n0.4063\n0.2903\n0.2109\n0.1838\n0.1571\n0.1521\n...\n0.5048\n0.5310\n0.4139\n0.4754\n0.3844\n0.0929\n0.4273\n0.1596\n0.1262\n0.1061\n\n\nF\n0.3059\n0.8798\n0.7296\n0.1564\n0.3792\n0.4320\n0.3555\n0.3121\n0.2807\n0.2782\n...\n0.4170\n0.6456\n0.5086\n0.0721\n0.6015\n0.2351\nNaN\n0.3118\n0.0711\n0.1474\n\n\n\n\n5 rows × 766 columns\n\n\n\n\nam_mean = pd.DataFrame(braf.groupby('position')\\\n                       .am_pathogenicity.mean())\\\n                        .reset_index()\\\n                        .rename(columns={'position':'residue_number'})\n\n\nam_mean.residue_number = am_mean.residue_number.astype('int64')"
  },
  {
    "objectID": "notebooks/alphamissense_to_pdb.html#replace-b_factor-with-am-score-in-pdb-file-to-visualize",
    "href": "notebooks/alphamissense_to_pdb.html#replace-b_factor-with-am-score-in-pdb-file-to-visualize",
    "title": "Load AlphaMissense score",
    "section": "Replace b_factor with AM score in pdb file to visualize",
    "text": "Replace b_factor with AM score in pdb file to visualize\n\nurl = f\"https://alphafold.ebi.ac.uk/files/AF-{uniprot_id}-F1-model_v4.pdb\"\n\nsubprocess.run([\"wget\", url])\n\n--2023-09-22 15:05:06--  https://alphafold.ebi.ac.uk/files/AF-P15056-F1-model_v4.pdb\nResolving alphafold.ebi.ac.uk (alphafold.ebi.ac.uk)... 34.149.152.8\nConnecting to alphafold.ebi.ac.uk (alphafold.ebi.ac.uk)|34.149.152.8|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: unspecified [application/octet-stream]\nSaving to: ‘AF-P15056-F1-model_v4.pdb’\n\n     0K .......... .......... .......... .......... .......... 19.4M\n    50K .......... .......... .......... .......... .......... 30.0M\n   100K .......... .......... .......... .......... .......... 24.3M\n   150K .......... .......... .......... .......... .......... 44.7M\n   200K .......... .......... .......... .......... .......... 42.9M\n   250K .......... .......... .......... .......... .......... 42.7M\n   300K .......... .......... .......... .......... .......... 52.9M\n   350K .......... .......... .......... .......... .......... 80.7M\n   400K .......... .......... .......... .......... .......... 85.9M\n   450K .......... .......... ........                         85.4M=0.01s\n\n2023-09-22 15:05:06 (39.1 MB/s) - ‘AF-P15056-F1-model_v4.pdb’ saved [489563]\n\n\n\nCompletedProcess(args=['wget', 'https://alphafold.ebi.ac.uk/files/AF-P15056-F1-model_v4.pdb'], returncode=0)\n\n\n\n# If it is AF structure\npdb = read_pdb(f'AF-{uniprot_id}-F1-model_v4.pdb')\n\n\n# If it is rscb structure\n# pdb = read_pdb('7upi.pdb')\n\n# pdb = pdb.query('chain_id==\"C\"').reset_index(drop=True)\n\n\npdb = pdb.merge(am_mean)\n\n\npdb['b_factor'] = pdb.am_pathogenicity # replace b_factor score with am score\n\n\n# string = df2string(pdb,f'AM_7upi.pdb')\n\n\nstring = df2string(pdb,f'AM_{uniprot_id}.pdb')\n\n\nplot_protein(string)\n\n\n        You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: \n        jupyter labextension install jupyterlab_3dmol\n        \n\n\n\nDownload the output pdb file, open pdb file in ChimeraX, and type “color byattribute bfactor” in command to visualize AM score\n\n\n\nimage.png"
  },
  {
    "objectID": "notebooks/get_top_genes_reactome.html",
    "href": "notebooks/get_top_genes_reactome.html",
    "title": "Get top-regulated genes for Reactome Gene list analysis",
    "section": "",
    "text": "import pandas as pd\nimport matplotlib.pyplot as plt\n\n\ndf = pd.read_csv('pdcd1.csv')\n\n\ndf.head()\n\n\n  \n    \n\n\n\n\n\n\nGene\nMetaP\n\n\n\n\n0\nA1BG\n0.508638\n\n\n1\nA1CF\n-2.657577\n\n\n2\nA2M\n11.769551\n\n\n3\nA2ML1\n0.148742\n\n\n4\nA3GALT2\n0.173925\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\ndf.hist(bins=200);\n\n\n\n\n\n# quantile\nq_lo = 0.05\nq_hi = 0.85\n\n\n# Finding the 25th and 75th quantiles\nthr_lo = df['MetaP'].quantile(0.05)\nthr_hi = df['MetaP'].quantile(0.85)\n\n\nthr_lo, thr_hi # treshold\n\n(-4.958607315, 4.620712928299987)\n\n\n\n# Getting top 25% and bottom 25% data\nhi = df[df['MetaP'] &gt;= thr_hi]\nlo = df[df['MetaP'] &lt;= thr_lo]\n\n\n# Plotting histogram\nax = df['MetaP'].hist(bins=200, alpha=0.75, figsize=(10, 6))\nax.set_title('Histogram of MetaP with 25% and 75% Thresholds')\nax.set_xlabel('MetaP')\nax.set_ylabel('Frequency')\n\n# Drawing threshold lines for 25% and 75% quantiles\nax.axvline(thr_lo, color='r', linestyle='--', label='25% Quantile')\nax.axvline(thr_hi, color='b', linestyle='--', label='75% Quantile')\n\n# Adding legend\nax.legend()\n\n# Show plot\nplt.show()\n\n\n\n\n\nhi\n\n\n  \n    \n\n\n\n\n\n\nGene\nMetaP\n\n\n\n\n2\nA2M\n11.769551\n\n\n9\nABCA1\n9.050610\n\n\n17\nABCA6\n12.000000\n\n\n18\nABCA7\n23.568636\n\n\n20\nABCA9\n10.004365\n\n\n...\n...\n...\n\n\n19622\nZNF746\n6.229148\n\n\n19637\nZNF804A\n38.508638\n\n\n19651\nZNF831\n159.853872\n\n\n19662\nZPLD1\n4.853872\n\n\n19667\nZRSR2\n5.698970\n\n\n\n\n\n2954 rows × 2 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\nhi.shape\n\n(2954, 2)\n\n\n\nlo.shape\n\n(989, 2)\n\n\n\ndf.shape\n\n(19694, 2)\n\n\n\nhi.to_csv('hi_pdcd1.csv',index=False)\nlo.to_csv('lo_pdcd1.csv',index=False)"
  },
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "nbs",
    "section": "",
    "text": "!pip install -U nbdev\n\n\n\n!pip install pyngrok\n\nWARNING: The directory '/home/jovyan/.cache/pip' or its parent directory is not owned or is not writable by the current user. The cache has been disabled. Check the permissions and owner of that directory. If executing pip with sudo, you should use sudo's -H flag.\nCollecting pyngrok\n  Downloading pyngrok-7.0.0.tar.gz (718 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 718.7/718.7 kB 39.1 MB/s eta 0:00:00\n  Preparing metadata (setup.py) ... done\nRequirement already satisfied: PyYAML in /opt/conda/lib/python3.11/site-packages (from pyngrok) (6.0.1)\nBuilding wheels for collected packages: pyngrok\n  Building wheel for pyngrok (setup.py) ... done\n  Created wheel for pyngrok: filename=pyngrok-7.0.0-py3-none-any.whl size=21129 sha256=746fca56f48eb2a1b92eff9c04210688ad33598f6cbfc9d07768b697a3f47ee6\n  Stored in directory: /tmp/pip-ephem-wheel-cache-iajrcv6n/wheels/01/28/9c/5a79fae0cdb145a341b220ed41a4ecf660eec07b9090e17c16\nSuccessfully built pyngrok\nInstalling collected packages: pyngrok\nSuccessfully installed pyngrok-7.0.0\nWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n\n\n\nfrom pyngrok import ngrok\n!ngrok config add-authtoken 2TcZn9S1EnAWRznc1F3l07EhsDA_5DKkTteGNdVniRR6JMcAU\nngrok_tunnel = ngrok.connect(7000)\n\nngrok_tunnel\n\nAuthtoken saved to configuration file: /home/jovyan/.config/ngrok/ngrok.yml                         \n\n\n&lt;NgrokTunnel: \"https://9a72-172-83-13-4.ngrok-free.app\" -&gt; \"http://localhost:7000\"&gt;\n\n\n\n!nbdev_preview --port 7000\n\nQuarto is not installed. We will download and install it for you.\nInstalling or upgrading quarto -- this requires root access.\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100    72  100    72    0     0    576      0 --:--:-- --:--:-- --:--:--   580\n100   114    0   114    0     0    624      0 --:--:-- --:--:-- --:--:--   624\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n100 84.5M  100 84.5M    0     0  97.3M      0 --:--:-- --:--:-- --:--:-- 97.3M\nSelecting previously unselected package quarto.\n(Reading database ... 47195 files and directories currently installed.)\nPreparing to unpack quarto-linux-amd64.deb ...\nUnpacking quarto (1.3.450) ...\nSetting up quarto (1.3.450) ...\nWARNING: The directory '/home/jovyan/.cache/pip' or its parent directory is not owned or is not writable by the current user. The cache has been disabled. Check the permissions and owner of that directory. If executing pip with sudo, you should use sudo's -H flag.\nObtaining file:///notebooks/nbs\nERROR: file:///notebooks/nbs does not appear to be a Python project: neither 'setup.py' nor 'pyproject.toml' found.\nPreparing to preview\n[1/3] index.ipynb\n[2/3] setup.ipynb\n[3/3] notebooks/AlphaMissense_to_pdb.ipynb\n\nWatching files for changes\nBrowse at http://localhost:7000/\n/usr/bin/xdg-open: 882: www-browser: not found\n/usr/bin/xdg-open: 882: links2: not found\n/usr/bin/xdg-open: 882: elinks: not found\n/usr/bin/xdg-open: 882: links: not found\n/usr/bin/xdg-open: 882: lynx: not found\n/usr/bin/xdg-open: 882: w3m: not found\nxdg-open: no method available for opening 'http://localhost:7000/'\nGET: /\nGET: /\nGET: /\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\npandoc \n  to: html\n  output-file: setup.html\n  standalone: true\n  title-prefix: nbs\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  css:\n    - styles.css\n  toc: true\n  \nmetadata\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  theme: cosmo\n  \nGET: /setup.html\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nGET: /setup.html\nGET: /notebooks/r_sample.html\npandoc \n  to: html\n  output-file: setup.html\n  standalone: true\n  title-prefix: nbs\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  css:\n    - styles.css\n  toc: true\n  \nmetadata\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  theme: cosmo\n  \nGET: /setup.html\nGET: /notebooks/r_sample.html\npandoc \n  to: html\n  output-file: /notebooks/nbs/_proc/notebooks/r_sample.html\n  standalone: true\n  title-prefix: nbs\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  css:\n    - ../styles.css\n  toc: true\n  \nmetadata\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  theme: cosmo\n  title: R\n  \nGET: /notebooks/r_sample.html\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/quarto.py\", line 297, in _f\n    try: serve_drv.main(res)\n         ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 22, in main\n    if src.suffix=='.ipynb': exec_nb(src, dst, x)\n                             ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/nbdev/serve_drv.py\", line 15, in exec_nb\n    nb = read_nb(src)\n         ^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 57, in read_nb\n    res = dict2nb(_read_json(path, encoding='utf-8'))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/site-packages/execnb/nbio.py\", line 16, in _read_json\n    return loads(Path(self).read_text(encoding=encoding, errors=errors))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\npandoc \n  to: html\n  output-file: /notebooks/nbs/_proc/notebooks/r_sample.html\n  standalone: true\n  title-prefix: nbs\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  css:\n    - ../styles.css\n  toc: true\n  \nmetadata\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  theme: cosmo\n  title: R\n  \nGET: /notebooks/r_sample.html\nERROR: \nError reading metadata file from /notebooks/nbs/_proc/sidebar.yml\n\nERROR: Internal Error: createSourceContext called with bad location.\n\nError: Internal Error: createSourceContext called with bad location.\n    at createSourceContext (file:///opt/quarto/bin/quarto.js:14790:15)\n    at createLocalizedError (file:///opt/quarto/bin/quarto.js:14864:28)\n    at file:///opt/quarto/bin/quarto.js:15006:55\n    at Array.map (&lt;anonymous&gt;)\n    at ValidationContext.collectErrors (file:///opt/quarto/bin/quarto.js:15006:32)\n    at ValidationContext.validate (file:///opt/quarto/bin/quarto.js:14929:21)\n    at validate (file:///opt/quarto/bin/quarto.js:15293:20)\n    at YAMLSchema.validateParse (file:///opt/quarto/bin/quarto.js:15318:34)\n    at validate (file:///opt/quarto/bin/quarto.js:18623:43)\n    at withValidator (file:///opt/quarto/bin/quarto.js:15381:25)\n^C"
  }
]